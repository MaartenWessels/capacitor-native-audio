{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\n\r\nimport type {\r\n    AudioPlayerDefaultParams,\r\n    AudioPlayerListenerParams,\r\n    AudioPlayerListenerResult,\r\n    AudioPlayerMetadataUpdateListenerEvent,\r\n    AudioPlayerPlugin,\r\n    AudioPlayerPrepareParams,\r\n} from './definitions';\r\n\r\nexport class AudioPlayerWeb extends WebPlugin implements AudioPlayerPlugin {\r\n    create(params: AudioPlayerPrepareParams): Promise<{ success: boolean }> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    initialize(params: AudioPlayerDefaultParams): Promise<{ success: boolean }> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    changeAudioSource(params: AudioPlayerDefaultParams & { source: string }): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    changeMetadata(\r\n        params: AudioPlayerDefaultParams & {\r\n            friendlyTitle?: string;\r\n            artworkSource?: string;\r\n        },\r\n    ): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    updateMetadata(params: AudioPlayerDefaultParams): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    getDuration(params: AudioPlayerDefaultParams): Promise<{ duration: number }> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    getCurrentTime(params: AudioPlayerDefaultParams): Promise<{ currentTime: number }> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    play(params: AudioPlayerDefaultParams): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    pause(params: AudioPlayerDefaultParams): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    seek(params: AudioPlayerDefaultParams & { timeInSeconds: number }): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    stop(params: AudioPlayerDefaultParams): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    setVolume(params: AudioPlayerDefaultParams & { volume: number }): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    setRate(params: AudioPlayerDefaultParams & { rate: number }): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    isPlaying(params: AudioPlayerDefaultParams): Promise<{ isPlaying: boolean }> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    destroy(params: AudioPlayerDefaultParams): Promise<void> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    onAppGainsFocus(\r\n        params: AudioPlayerListenerParams,\r\n        callback: () => void,\r\n    ): Promise<AudioPlayerListenerResult> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    onAppLosesFocus(\r\n        params: AudioPlayerListenerParams,\r\n        callback: () => void,\r\n    ): Promise<AudioPlayerListenerResult> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    onAudioReady(\r\n        params: AudioPlayerListenerParams,\r\n        callback: () => void,\r\n    ): Promise<AudioPlayerListenerResult> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    onAudioEnd(\r\n        params: AudioPlayerListenerParams,\r\n        callback: () => void,\r\n    ): Promise<AudioPlayerListenerResult> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    onPlaybackStatusChange(\r\n        params: AudioPlayerListenerParams,\r\n        callback: (result: { status: 'playing' | 'paused' | 'stopped' }) => void,\r\n    ): Promise<AudioPlayerListenerResult> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    onMetadataUpdate(\r\n        params: AudioPlayerListenerParams,\r\n        callback: (result: AudioPlayerMetadataUpdateListenerEvent) => void,\r\n    ): Promise<AudioPlayerListenerResult> {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n\r\n    startBackgroundTracking(params: AudioPlayerDefaultParams & { duration: number }): Promise<void> {\r\n        // On web, background tracking is not needed since JS timers work fine\r\n        // Return resolved promise to avoid breaking the flow\r\n        return Promise.resolve();\r\n    }\r\n\r\n    stopBackgroundTracking(params: AudioPlayerDefaultParams): Promise<void> {\r\n        // On web, background tracking is not needed since JS timers work fine\r\n        // Return resolved promise to avoid breaking the flow\r\n        return Promise.resolve();\r\n    }\r\n\r\n    fetchBackgroundPlayedSeconds(params: AudioPlayerDefaultParams): Promise<{ seconds: number[] }> {\r\n        // On web, background tracking is not needed since JS timers work fine\r\n        // Return empty array to indicate no background data\r\n        return Promise.resolve({ seconds: [] });\r\n    }\r\n}\r\n"]}